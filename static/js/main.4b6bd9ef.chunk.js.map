{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovieByTitle","title","url","fetch","then","resp","ok","json","Promise","reject","status","statusText","FindMovie","addMovie","errMess","cancelErrMess","useState","setMovie","query","setQuery","error","setError","htmlFor","type","id","placeholder","value","onChange","event","target","autoComplete","onClick","mov","console","log","length","App","setMovies","setErrMess","find","prev","ReactDOM","render","document","getElementById"],"mappings":"6TAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAa,UAAQ,aAApC,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBAAKC,IAAKF,EAAMG,OAAQC,IAAI,kBAGhC,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBAAKC,IAAI,wBAAwBE,IAAI,aAGzC,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,cAAlC,SACGD,EAAMK,aAKb,sBAAKJ,UAAU,UAAU,UAAQ,UAAjC,UACGD,EAAMM,KACP,iCCtBKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,8BACE,oBAAIP,UAAU,SAAd,SACGO,EAAOC,KAAI,SAACT,GAAD,OACV,6BACE,cAAC,EAAD,CAAWA,MAAOA,KADXA,EAAMU,gBCDVC,G,MAAkB,SAACC,GAAD,OAPdC,EAQP,MAAD,OAAOD,GAPdE,MAAM,GAAD,OAHU,4CAGV,OAAeD,IACjBE,MAAK,SAAAC,GAAI,OAAKA,EAAKC,GAChBD,EAAKE,OACLC,QAAQC,OAAR,UAAkBJ,EAAKK,OAAvB,aAAkCL,EAAKM,gBAJ/B,IAACT,ICQJU,EAA6B,SAAC,GAIpC,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,QACAC,EACI,EADJA,cAEA,EAA0BC,mBAAuB,MAAjD,mBAAO3B,EAAP,KAAc4B,EAAd,KACA,EAA0BD,mBAAiB,IAA3C,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA0BH,oBAAkB,GAA5C,mBAAOI,EAAP,KAAcC,EAAd,KAkCA,OACE,qCACE,uBAAM/B,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQgC,QAAQ,cAAjC,yBAIA,qBAAKhC,UAAU,UAAf,SACE,uBACEiC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZnC,UAAW8B,EACP,kBACA,QACJM,MAAOR,EACPS,SA3BQ,SAACC,GACnBT,EAASS,EAAMC,OAAOH,OACtBL,GAAS,IA0BCS,aAAa,UAIhBV,GAEG,mBAAG9B,UAAU,iBAAb,qDAMN,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEiC,KAAK,SACLjC,UAAU,kBACVyC,QAnEM,WAChBhB,IAEKG,IAILD,EAAS,MACTI,GAAS,GACTrB,EAAgBkB,GACbd,MAAK,SAAC4B,GACDA,EAAIjC,QACNkB,EAASe,GACTb,EAAS,MAETE,GAAS,GACTY,QAAQC,IAAIF,GACZb,EAAS,UAmDL,UAAQ,OAJV,4BAUF,qBAAK7B,UAAU,UAAf,SACE,wBACEiC,KAAK,SACLjC,UAAU,oBACVyC,QAnDW,WACrBlB,EAASxB,GACT4B,EAAS,OAkDC,UAAQ,MAJV,qCAYN,sBAAK3B,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GACI,cAAC,EAAD,CAAWA,MAAOA,OAEzB,8BACGyB,EAAQqB,OAAS,GAEd,mBAAG7C,UAAU,uBAAb,SACGwB,UC/GFsB,EAAgB,WAC3B,MAA4BpB,mBAAkB,IAA9C,mBAAOnB,EAAP,KAAewC,EAAf,KACA,EAA8BrB,mBAAiB,IAA/C,mBAAOF,EAAP,KAAgBwB,EAAhB,KAuBA,OACE,sBAAKhD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CACEuB,SA5BS,SAACxB,GAChB,GAAKA,EAAL,CAMA,GAFcQ,EAAO0C,MAAK,SAAAP,GAAG,OAAIA,EAAIjC,SAAWV,EAAMU,UAMpD,OAHAkC,QAAQC,IAAI,4CACZI,EAAW,uCAKbD,GAAU,SAACG,GAAD,4BAAcA,GAAd,CAAoBnD,SAexByB,QAASA,EACTC,cAbc,WACpBuB,EAAW,aCxBfG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4b6bd9ef.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\" data-cy=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img src={movie.Poster} alt=\"Film logo\" />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movie-title\">\n            {movie.Title}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"content\">\n        {movie.Plot}\n        <br />\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div>\n    <ul className=\"movies\">\n      {movies.map((movie) => (\n        <li key={movie.imdbID}>\n          <MovieCard movie={movie} />\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","/* eslint-disable no-console */\n/* eslint-disable prefer-promise-reject-errors */\nconst BASE_URL = 'https://www.omdbapi.com/?apikey=eb4a7b27';\n\nconst getData = (url: string) => (\n  fetch(`${BASE_URL}${url}`)\n    .then(resp => (resp.ok\n      ? resp.json()\n      : Promise.reject(`${resp.status}: ${resp.statusText}`)))\n);\n\nexport const getMovieByTitle = (title: string) => (\n  getData(`&t=${title}`)\n);\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovieByTitle } from '../../api';\n\ninterface Props {\n  addMovie: (movie: Movie | null) => void;\n  errMess: string;\n  cancelErrMess: () => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({\n  addMovie,\n  errMess,\n  cancelErrMess,\n}) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState<string>('');\n  const [error, setError] = useState<boolean>(false);\n\n  const findMovie = () => {\n    cancelErrMess();\n\n    if (!query) {\n      return;\n    }\n\n    setMovie(null);\n    setError(false);\n    getMovieByTitle(query)\n      .then((mov: Movie) => {\n        if (mov.imdbID) {\n          setMovie(mov);\n          setQuery('');\n        } else {\n          setError(true);\n          console.log(mov);\n          setQuery('');\n        }\n      });\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setError(false);\n  };\n\n  const handleAddMovie = () => {\n    addMovie(movie);\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={error\n                ? 'input is-danger'\n                : 'input'}\n              value={query}\n              onChange={handleInput}\n              autoComplete=\"off\"\n            />\n          </div>\n\n          {error\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n              data-cy=\"find\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleAddMovie}\n              data-cy=\"add\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie\n          && <MovieCard movie={movie} />}\n      </div>\n      <div>\n        {errMess.length > 0\n          && (\n            <p className=\"mt-3 has-text-danger\">\n              {errMess}\n            </p>\n          )}\n      </div>\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [errMess, setErrMess] = useState<string>('');\n\n  const addMovie = (movie: Movie | null) => {\n    if (!movie) {\n      return;\n    }\n\n    const check = movies.find(mov => mov.imdbID === movie.imdbID);\n\n    if (check) {\n      console.log('Movie is already added to the list!');\n      setErrMess('Movie is already added to the list!');\n\n      return;\n    }\n\n    setMovies((prev) => [...prev, movie]);\n  };\n\n  const cancelErrMess = () => {\n    setErrMess('');\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          errMess={errMess}\n          cancelErrMess={cancelErrMess}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}